[{"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\index.js":"1","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\App.js":"2","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\auth\\AuthContext.js":"3","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\AppRouter.js":"4","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\config\\token.js":"5","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\auth\\authReducer.js":"6","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\PrivateRoute.js":"7","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\DashboardRoutes.js":"8","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\PublicRoute.js":"9","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\types\\types.js":"10","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\config\\clienteAxios.js":"11","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Login\\index.js":"12","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Inicio\\index.js":"13","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Layout\\index.js":"14","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarServicio\\index.js":"15","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Especialidad\\index.js":"16","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarGrupo\\index.js":"17","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarConvenio\\index.js":"18","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Medico\\index.js":"19","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Servicio\\index.js":"20","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Grupo\\index.js":"21","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Medico\\index.js":"22","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Especialidad\\index.js":"23","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Servicio\\index.js":"24","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\UserService.js":"25","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Universidad\\index.js":"26","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\DoctorService.js":"27","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\PlazaService.js":"28","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SchoolAgreementService.js":"29","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\CampusService.js":"30","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\TeamService.js":"31","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SpecialtyService.js":"32","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\NivelService.js":"33","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\ServicioDoctorService.js":"34","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\TableMesList.js":"35","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SchoolService.js":"36","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Sidebar\\index.js":"37","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Header\\index.js":"38","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\TableMes.js":"39","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\SelectTd.js":"40","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Usuario\\index.js":"41","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\RoleService.js":"42"},{"size":234,"mtime":1608256127870,"results":"43","hashOfConfig":"44"},{"size":752,"mtime":1608256127814,"results":"45","hashOfConfig":"44"},{"size":90,"mtime":1608256127815,"results":"46","hashOfConfig":"44"},{"size":804,"mtime":1608256127896,"results":"47","hashOfConfig":"44"},{"size":334,"mtime":1608256127863,"results":"48","hashOfConfig":"44"},{"size":500,"mtime":1608534224741,"results":"49","hashOfConfig":"44"},{"size":585,"mtime":1608256127897,"results":"50","hashOfConfig":"44"},{"size":2168,"mtime":1608495415578,"results":"51","hashOfConfig":"44"},{"size":516,"mtime":1608256127898,"results":"52","hashOfConfig":"44"},{"size":82,"mtime":1608256127908,"results":"53","hashOfConfig":"44"},{"size":234,"mtime":1608494895924,"results":"54","hashOfConfig":"44"},{"size":3866,"mtime":1608256127874,"results":"55","hashOfConfig":"44"},{"size":135,"mtime":1608256127872,"results":"56","hashOfConfig":"44"},{"size":433,"mtime":1608256127822,"results":"57","hashOfConfig":"44"},{"size":153,"mtime":1608256127889,"results":"58","hashOfConfig":"44"},{"size":147,"mtime":1608256127876,"results":"59","hashOfConfig":"44"},{"size":649,"mtime":1608256127888,"results":"60","hashOfConfig":"44"},{"size":3842,"mtime":1608256127886,"results":"61","hashOfConfig":"44"},{"size":4541,"mtime":1608554646624,"results":"62","hashOfConfig":"44"},{"size":139,"mtime":1608256127882,"results":"63","hashOfConfig":"44"},{"size":9371,"mtime":1608256127878,"results":"64","hashOfConfig":"44"},{"size":40632,"mtime":1608558717881,"results":"65","hashOfConfig":"44"},{"size":161,"mtime":1608256127891,"results":"66","hashOfConfig":"44"},{"size":5706,"mtime":1608256127895,"results":"67","hashOfConfig":"44"},{"size":704,"mtime":1608503798054,"results":"68","hashOfConfig":"44"},{"size":7387,"mtime":1608494517462,"results":"69","hashOfConfig":"44"},{"size":956,"mtime":1608485211769,"results":"70","hashOfConfig":"44"},{"size":190,"mtime":1608256127902,"results":"71","hashOfConfig":"44"},{"size":222,"mtime":1608256127903,"results":"72","hashOfConfig":"44"},{"size":188,"mtime":1608256127899,"results":"73","hashOfConfig":"44"},{"size":185,"mtime":1608256127906,"results":"74","hashOfConfig":"44"},{"size":203,"mtime":1608256127905,"results":"75","hashOfConfig":"44"},{"size":193,"mtime":1608256127901,"results":"76","hashOfConfig":"44"},{"size":1132,"mtime":1608256127905,"results":"77","hashOfConfig":"44"},{"size":3251,"mtime":1608256127818,"results":"78","hashOfConfig":"44"},{"size":495,"mtime":1608494517464,"results":"79","hashOfConfig":"44"},{"size":3672,"mtime":1608539980986,"results":"80","hashOfConfig":"44"},{"size":1010,"mtime":1608256127820,"results":"81","hashOfConfig":"44"},{"size":2105,"mtime":1608256127817,"results":"82","hashOfConfig":"44"},{"size":955,"mtime":1608256127817,"results":"83","hashOfConfig":"44"},{"size":16169,"mtime":1608533177226,"results":"84","hashOfConfig":"44"},{"size":304,"mtime":1608507454238,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1pykx6h",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\index.js",[],["173","174"],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\App.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\auth\\AuthContext.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\AppRouter.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\config\\token.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\auth\\authReducer.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\PrivateRoute.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\DashboardRoutes.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\PublicRoute.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\types\\types.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\config\\clienteAxios.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Login\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Inicio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Layout\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarServicio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Especialidad\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarGrupo\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarConvenio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Medico\\index.js",["175"],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Servicio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Grupo\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Medico\\index.js",["176","177","178","179","180"],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Especialidad\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Servicio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\UserService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Universidad\\index.js",["181"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { createSchool, getSchools, actualizarSchool } from \"../../../services/SchoolService\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Universidad = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const listar = () => {\r\n    getSchools().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    shortName: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre Abreviado requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      shortName: \"\",\r\n      status: true,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      if(editar){\r\n        createSchool(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }else{\r\n        createSchool(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }\r\n\r\n     \r\n      \r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre Abreviado\",\r\n      dataIndex: \"shortName\",\r\n      key: \"shortName\",\r\n      width: 170,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        // <Button type=\"link\" size=\"small\">\r\n        //   <EditOutlined />\r\n        // </Button>\r\n         <Button type=\"primary\" size=\"large\" onClick={() => \r\n          {             \r\n            formik.values.name = record.name;\r\n            formik.values.shortName = record.shortName;\r\n            formik.values.status = record.status;\r\n            formik.values.id = record.id;\r\n            setEditar(true);\r\n            setVisible(true);          \r\n          }\r\n         \r\n         }>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Universidad</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>           \r\n          {\r\n            formik.values.name = null;\r\n            formik.values.shortName = null;\r\n            formik.values.true = null;\r\n            formik.values.id = null;\r\n            setEditar(false);\r\n            setVisible(true)\r\n          }\r\n          }>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={loading}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Universidad\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Universidad\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombre Abreviado:\" required>\r\n              <Input\r\n                name=\"shortName\"\r\n                value={formik.values.shortName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.shortName && formik.touched.shortName ? (\r\n                <div className=\"error-field\">{formik.errors.shortName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n              {\r\n                editar? (\r\n                <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n                ) : <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n              }\r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\DoctorService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\PlazaService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SchoolAgreementService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\CampusService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\TeamService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SpecialtyService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\NivelService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\ServicioDoctorService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\TableMesList.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SchoolService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Sidebar\\index.js",["182","183"],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Header\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\TableMes.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\SelectTd.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Usuario\\index.js",["184","185","186","187","188","189","190"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined, EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\r\nimport { getRoleById, getRoles } from \"../../../services/RoleService\";\r\nimport { getUserById, getUsers, findById, updateUser, createUser } from \"../../../services/UserService\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (msg, description, placement) => {\r\n  notification.error({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Usuario = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visibleNewForm, setVisibleNewForm] = useState(false);\r\n  const [visibleUpdateForm, setVisibleUpdateForm] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  const listar = () => {\r\n    getUsers().then((resp) => {\r\n      console.log(resp);\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  function roleOptions(data){\r\n    let response = [];\r\n    data.forEach( (role) => {\r\n      // console.log(role);\r\n      response.push( {\r\n        label : role.name,\r\n        value : role.id\r\n      });\r\n    });\r\n    return response;\r\n  };\r\n\r\n  function getUser(id)\r\n  {\r\n    getUserById(id).then((data) => {\r\n      setDataDoctorToForm(data);\r\n      setVisibleUpdateForm(true);\r\n    });\r\n  }\r\n\r\n  function roleOptionsChecked(data){\r\n    let response = [];\r\n    data.forEach( (role) => {\r\n      // console.log(role);\r\n      response.push( role.id );\r\n    });\r\n    return response;\r\n  };\r\n\r\n  function onChangeRoles(checkedValues) {\r\n    formik.values.roles = [];\r\n    checkedValues.forEach(rol => {      \r\n      formik.values.roles.push({id : rol});\r\n    });    \r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre de Usuario requerido.\"),\r\n    password: Yup.string()      \r\n      .min(8, \"Debe tener al menos 8 caracteres.\")\r\n      .required(\"Contraseña requerido.\"),\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    lastName: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {  \r\n      action : \"new\",\r\n      username : \"\",\r\n      password : \"\",\r\n      name : \"\",\r\n      lastName : \"\",\r\n      status : true,\r\n      roles: []\r\n  },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      delete value.key;      \r\n      value.username = value.username.trim();      \r\n      if(value.action == \"new\" || editar == false)\r\n      { delete value.action;      \r\n        createUser(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisibleNewForm(false);\r\n          openNotification(\"Registrado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        }).catch(function (error) {\r\n          if (error.response) \r\n          {\r\n            openErrorNotification(error.response.data.message, \"\", \"topRight\");            \r\n          }\r\n        });\r\n      }\r\n      else if(value.action == \"update\" || editar == true)\r\n      { delete value.action;      \r\n        updateUser(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisibleUpdateForm(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        }).catch(function (error) {\r\n          if (error.response) \r\n          { openErrorNotification(error.response.data.message, \"\", \"topRight\");\r\n            // console.log(error.response.status);\r\n            // console.log(error.response.headers);\r\n          }\r\n        });\r\n      }      \r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre de Usuario\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },    \r\n    {\r\n      title: \"Apellido\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n         <Button type=\"primary\" size=\"large\" onClick={() => { showUpdateForm(record); }}>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawerNewForm = (e) => {    \r\n    setVisibleNewForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const handleCloseDrawerUpdateForm = (e) => {    \r\n    setVisibleUpdateForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const showUpdateForm = (user) => {    \r\n    getUser(user.id);\r\n    console.log(user);    \r\n  };\r\n\r\n  function setDataDoctorToForm(doctor)\r\n  { formik.values.id = doctor.id;\r\n    formik.values.username = doctor.username;\r\n    formik.values.password = doctor.password;\r\n    formik.values.name = doctor.name;\r\n    formik.values.lastName = doctor.lastName;\r\n    formik.values.status = doctor.status;\r\n    formik.values.roles = doctor.roles;\r\n    formik.values.action = \"update\";\r\n    setEditar(true);\r\n  }\r\n\r\n  function cleanDataDoctorToForm()\r\n  { formik.values.id = null;\r\n    formik.values.username = '';\r\n    formik.values.password = '';\r\n    formik.values.name = '';\r\n    formik.values.lastName = '';\r\n    formik.values.status = true;\r\n    formik.values.roles = [];\r\n    formik.values.action = \"new\";\r\n    setEditar(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(false);    \r\n    listar();\r\n    getRoles().then(setRoles);\r\n    // console.log(roles);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Usuario</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>{ cleanDataDoctorToForm(); setVisibleNewForm(true)}}>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={loading}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Usuario\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawerNewForm}\r\n          visible={visibleNewForm}\r\n        >\r\n          <Form\r\n            title=\"Usuario\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{display:'none'}}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}                    \r\n                  />                  \r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre de Usuario:\" required>\r\n              <Input\r\n                name=\"username\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.username && formik.touched.username ? (\r\n                <div className=\"error-field\">{formik.errors.username}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Contraseña:\" required>\r\n              <Input.Password\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n              />\r\n              {formik.errors.password && formik.touched.password ? (\r\n                <div className=\"error-field\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombres:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Apellidos:\" required>\r\n              <Input\r\n                name=\"lastName\"\r\n                value={formik.values.lastName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.lastName && formik.touched.lastName ? (\r\n                <div className=\"error-field\">{formik.errors.lastName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Roles:\" required>\r\n              {/* checkhere */}\r\n              <Checkbox.Group options={roleOptions(roles)} defaultValue={[2]} onChange={onChangeRoles} />\r\n              {formik.errors.roles && formik.touched.roles ? (\r\n                <div className=\"error-field\">{formik.errors.roles}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n          </Form>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title=\"Actualizar Usuario\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawerUpdateForm}\r\n          visible={visibleUpdateForm}\r\n        >\r\n          <Form\r\n            title=\"Usuario\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{display:'none'}}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}                    \r\n                  />                  \r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"ID:\" required >\r\n                  <Input\r\n                    disabled\r\n                    name=\"id\"\r\n                    value={formik.values.id}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>              \r\n              <Col span={12}>\r\n                <Form.Item label=\"Nombre de Usuario:\" required>\r\n                  <Input\r\n                    name=\"username\"\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.username && formik.touched.username ? (\r\n                    <div className=\"error-field\">{formik.errors.username}</div>\r\n                  ) : null}\r\n              </Form.Item>\r\n              </Col>\r\n            </Row>            \r\n            <Form.Item label=\"Contraseña:\" required>\r\n              <Input.Password\r\n                  placeholder=\"Ingrese la nueva contraseña\"\r\n                  name=\"password\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}   \r\n                  iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                />\r\n                {formik.errors.password && formik.touched.password ? (\r\n                  <div className=\"error-field\">{formik.errors.password}</div>\r\n                ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombres:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Apellidos:\" required>\r\n              <Input\r\n                name=\"lastName\"\r\n                value={formik.values.lastName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.lastName && formik.touched.lastName ? (\r\n                <div className=\"error-field\">{formik.errors.lastName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Roles:\" required>\r\n              {/* checkhere */}\r\n              <Checkbox.Group options={roleOptions(roles)} defaultValue={roleOptionsChecked(formik.values.roles)} onChange={onChangeRoles} />\r\n              {formik.errors.roles && formik.touched.roles ? (\r\n                <div className=\"error-field\">{formik.errors.roles}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n              \r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\RoleService.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":22},{"ruleId":"195","severity":1,"message":"199","line":60,"column":10,"nodeType":"197","messageId":"198","endLine":60,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":175,"column":22,"nodeType":"202","messageId":"203","endLine":175,"endColumn":24},{"ruleId":"200","severity":1,"message":"201","line":175,"column":40,"nodeType":"202","messageId":"203","endLine":175,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":189,"column":27,"nodeType":"202","messageId":"203","endLine":189,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":189,"column":48,"nodeType":"202","messageId":"203","endLine":189,"endColumn":50},{"ruleId":"195","severity":1,"message":"204","line":14,"column":36,"nodeType":"197","messageId":"198","endLine":14,"endColumn":52},{"ruleId":"195","severity":1,"message":"205","line":10,"column":10,"nodeType":"197","messageId":"198","endLine":10,"endColumn":17},{"ruleId":"195","severity":1,"message":"206","line":10,"column":19,"nodeType":"197","messageId":"198","endLine":10,"endColumn":29},{"ruleId":"195","severity":1,"message":"207","line":17,"column":10,"nodeType":"197","messageId":"198","endLine":17,"endColumn":21},{"ruleId":"195","severity":1,"message":"208","line":18,"column":33,"nodeType":"197","messageId":"198","endLine":18,"endColumn":41},{"ruleId":"195","severity":1,"message":"209","line":23,"column":10,"nodeType":"197","messageId":"198","endLine":23,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":130,"column":23,"nodeType":"202","messageId":"203","endLine":130,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":130,"column":42,"nodeType":"202","messageId":"203","endLine":130,"endColumn":44},{"ruleId":"200","severity":1,"message":"201","line":145,"column":28,"nodeType":"202","messageId":"203","endLine":145,"endColumn":30},{"ruleId":"200","severity":1,"message":"201","line":145,"column":50,"nodeType":"202","messageId":"203","endLine":145,"endColumn":52},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'EditOutlined' is defined but never used.","Identifier","unusedVar","'teams' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'actualizarSchool' is defined but never used.","'isAdmin' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'getRoleById' is defined but never used.","'findById' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]