<<<<<<< HEAD
[{"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\index.js":"1","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\App.js":"2","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\auth\\AuthContext.js":"3","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\AppRouter.js":"4","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\config\\token.js":"5","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\auth\\authReducer.js":"6","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\PrivateRoute.js":"7","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\DashboardRoutes.js":"8","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\PublicRoute.js":"9","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\types\\types.js":"10","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\config\\clienteAxios.js":"11","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Login\\index.js":"12","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Inicio\\index.js":"13","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Layout\\index.js":"14","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarServicio\\index.js":"15","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Especialidad\\index.js":"16","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarGrupo\\index.js":"17","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarConvenio\\index.js":"18","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Medico\\index.js":"19","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Servicio\\index.js":"20","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Grupo\\index.js":"21","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Medico\\index.js":"22","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Especialidad\\index.js":"23","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Servicio\\index.js":"24","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\UserService.js":"25","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Universidad\\index.js":"26","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\DoctorService.js":"27","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\PlazaService.js":"28","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SchoolAgreementService.js":"29","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\CampusService.js":"30","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\TeamService.js":"31","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SpecialtyService.js":"32","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\NivelService.js":"33","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\ServicioDoctorService.js":"34","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\TableMesList.js":"35","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SchoolService.js":"36","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Sidebar\\index.js":"37","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Header\\index.js":"38","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\TableMes.js":"39","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\SelectTd.js":"40","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Usuario\\index.js":"41","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\RoleService.js":"42"},{"size":234,"mtime":1608256127870,"results":"43","hashOfConfig":"44"},{"size":752,"mtime":1608256127814,"results":"45","hashOfConfig":"44"},{"size":90,"mtime":1608256127815,"results":"46","hashOfConfig":"44"},{"size":804,"mtime":1608256127896,"results":"47","hashOfConfig":"44"},{"size":334,"mtime":1608256127863,"results":"48","hashOfConfig":"44"},{"size":500,"mtime":1608534224741,"results":"49","hashOfConfig":"44"},{"size":585,"mtime":1608256127897,"results":"50","hashOfConfig":"44"},{"size":2168,"mtime":1608495415578,"results":"51","hashOfConfig":"44"},{"size":516,"mtime":1608256127898,"results":"52","hashOfConfig":"44"},{"size":82,"mtime":1608256127908,"results":"53","hashOfConfig":"44"},{"size":234,"mtime":1608494895924,"results":"54","hashOfConfig":"44"},{"size":3866,"mtime":1608256127874,"results":"55","hashOfConfig":"44"},{"size":135,"mtime":1608256127872,"results":"56","hashOfConfig":"44"},{"size":433,"mtime":1608256127822,"results":"57","hashOfConfig":"44"},{"size":153,"mtime":1608256127889,"results":"58","hashOfConfig":"44"},{"size":147,"mtime":1608256127876,"results":"59","hashOfConfig":"44"},{"size":649,"mtime":1608256127888,"results":"60","hashOfConfig":"44"},{"size":3842,"mtime":1608256127886,"results":"61","hashOfConfig":"44"},{"size":4541,"mtime":1608554646624,"results":"62","hashOfConfig":"44"},{"size":139,"mtime":1608256127882,"results":"63","hashOfConfig":"44"},{"size":9371,"mtime":1608256127878,"results":"64","hashOfConfig":"44"},{"size":40632,"mtime":1608558717881,"results":"65","hashOfConfig":"44"},{"size":161,"mtime":1608256127891,"results":"66","hashOfConfig":"44"},{"size":5706,"mtime":1608256127895,"results":"67","hashOfConfig":"44"},{"size":704,"mtime":1608503798054,"results":"68","hashOfConfig":"44"},{"size":7387,"mtime":1608494517462,"results":"69","hashOfConfig":"44"},{"size":956,"mtime":1608485211769,"results":"70","hashOfConfig":"44"},{"size":190,"mtime":1608256127902,"results":"71","hashOfConfig":"44"},{"size":222,"mtime":1608256127903,"results":"72","hashOfConfig":"44"},{"size":188,"mtime":1608256127899,"results":"73","hashOfConfig":"44"},{"size":185,"mtime":1608256127906,"results":"74","hashOfConfig":"44"},{"size":203,"mtime":1608256127905,"results":"75","hashOfConfig":"44"},{"size":193,"mtime":1608256127901,"results":"76","hashOfConfig":"44"},{"size":1132,"mtime":1608256127905,"results":"77","hashOfConfig":"44"},{"size":3251,"mtime":1608256127818,"results":"78","hashOfConfig":"44"},{"size":495,"mtime":1608494517464,"results":"79","hashOfConfig":"44"},{"size":3672,"mtime":1608539980986,"results":"80","hashOfConfig":"44"},{"size":1010,"mtime":1608256127820,"results":"81","hashOfConfig":"44"},{"size":2105,"mtime":1608256127817,"results":"82","hashOfConfig":"44"},{"size":955,"mtime":1608256127817,"results":"83","hashOfConfig":"44"},{"size":16169,"mtime":1608533177226,"results":"84","hashOfConfig":"44"},{"size":304,"mtime":1608507454238,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1pykx6h",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\index.js",[],["173","174"],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\App.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\auth\\AuthContext.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\AppRouter.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\config\\token.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\auth\\authReducer.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\PrivateRoute.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\DashboardRoutes.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\routers\\PublicRoute.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\types\\types.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\config\\clienteAxios.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Login\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Inicio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Layout\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarServicio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Especialidad\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarGrupo\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Proceso\\AsignarConvenio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Medico\\index.js",["175"],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Servicio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Grupo\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Medico\\index.js",["176","177","178","179","180"],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Especialidad\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Reporte\\Servicio\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\UserService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Universidad\\index.js",["181"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { createSchool, getSchools, actualizarSchool } from \"../../../services/SchoolService\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Universidad = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const listar = () => {\r\n    getSchools().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    shortName: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre Abreviado requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      shortName: \"\",\r\n      status: true,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      if(editar){\r\n        createSchool(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }else{\r\n        createSchool(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }\r\n\r\n     \r\n      \r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre Abreviado\",\r\n      dataIndex: \"shortName\",\r\n      key: \"shortName\",\r\n      width: 170,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        // <Button type=\"link\" size=\"small\">\r\n        //   <EditOutlined />\r\n        // </Button>\r\n         <Button type=\"primary\" size=\"large\" onClick={() => \r\n          {             \r\n            formik.values.name = record.name;\r\n            formik.values.shortName = record.shortName;\r\n            formik.values.status = record.status;\r\n            formik.values.id = record.id;\r\n            setEditar(true);\r\n            setVisible(true);          \r\n          }\r\n         \r\n         }>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Universidad</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>           \r\n          {\r\n            formik.values.name = null;\r\n            formik.values.shortName = null;\r\n            formik.values.true = null;\r\n            formik.values.id = null;\r\n            setEditar(false);\r\n            setVisible(true)\r\n          }\r\n          }>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={loading}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Universidad\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Universidad\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombre Abreviado:\" required>\r\n              <Input\r\n                name=\"shortName\"\r\n                value={formik.values.shortName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.shortName && formik.touched.shortName ? (\r\n                <div className=\"error-field\">{formik.errors.shortName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n              {\r\n                editar? (\r\n                <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n                ) : <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n              }\r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\DoctorService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\PlazaService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SchoolAgreementService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\CampusService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\TeamService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SpecialtyService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\NivelService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\ServicioDoctorService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\TableMesList.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\SchoolService.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Sidebar\\index.js",["182","183"],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Header\\index.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\TableMes.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\components\\Grupos\\SelectTd.js",[],"D:\\Desarrollo\\React\\hospital-almenara-app\\src\\pages\\Mantenimiento\\Usuario\\index.js",["184","185","186","187","188","189","190"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined, EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\r\nimport { getRoleById, getRoles } from \"../../../services/RoleService\";\r\nimport { getUserById, getUsers, findById, updateUser, createUser } from \"../../../services/UserService\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (msg, description, placement) => {\r\n  notification.error({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Usuario = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visibleNewForm, setVisibleNewForm] = useState(false);\r\n  const [visibleUpdateForm, setVisibleUpdateForm] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  const listar = () => {\r\n    getUsers().then((resp) => {\r\n      console.log(resp);\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  function roleOptions(data){\r\n    let response = [];\r\n    data.forEach( (role) => {\r\n      // console.log(role);\r\n      response.push( {\r\n        label : role.name,\r\n        value : role.id\r\n      });\r\n    });\r\n    return response;\r\n  };\r\n\r\n  function getUser(id)\r\n  {\r\n    getUserById(id).then((data) => {\r\n      setDataDoctorToForm(data);\r\n      setVisibleUpdateForm(true);\r\n    });\r\n  }\r\n\r\n  function roleOptionsChecked(data){\r\n    let response = [];\r\n    data.forEach( (role) => {\r\n      // console.log(role);\r\n      response.push( role.id );\r\n    });\r\n    return response;\r\n  };\r\n\r\n  function onChangeRoles(checkedValues) {\r\n    formik.values.roles = [];\r\n    checkedValues.forEach(rol => {      \r\n      formik.values.roles.push({id : rol});\r\n    });    \r\n  }\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre de Usuario requerido.\"),\r\n    password: Yup.string()      \r\n      .min(8, \"Debe tener al menos 8 caracteres.\")\r\n      .required(\"Contraseña requerido.\"),\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    lastName: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {  \r\n      action : \"new\",\r\n      username : \"\",\r\n      password : \"\",\r\n      name : \"\",\r\n      lastName : \"\",\r\n      status : true,\r\n      roles: []\r\n  },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      delete value.key;      \r\n      value.username = value.username.trim();      \r\n      if(value.action == \"new\" || editar == false)\r\n      { delete value.action;      \r\n        createUser(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisibleNewForm(false);\r\n          openNotification(\"Registrado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        }).catch(function (error) {\r\n          if (error.response) \r\n          {\r\n            openErrorNotification(error.response.data.message, \"\", \"topRight\");            \r\n          }\r\n        });\r\n      }\r\n      else if(value.action == \"update\" || editar == true)\r\n      { delete value.action;      \r\n        updateUser(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisibleUpdateForm(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        }).catch(function (error) {\r\n          if (error.response) \r\n          { openErrorNotification(error.response.data.message, \"\", \"topRight\");\r\n            // console.log(error.response.status);\r\n            // console.log(error.response.headers);\r\n          }\r\n        });\r\n      }      \r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre de Usuario\",\r\n      dataIndex: \"username\",\r\n      key: \"username\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },    \r\n    {\r\n      title: \"Apellido\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n         <Button type=\"primary\" size=\"large\" onClick={() => { showUpdateForm(record); }}>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawerNewForm = (e) => {    \r\n    setVisibleNewForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const handleCloseDrawerUpdateForm = (e) => {    \r\n    setVisibleUpdateForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const showUpdateForm = (user) => {    \r\n    getUser(user.id);\r\n    console.log(user);    \r\n  };\r\n\r\n  function setDataDoctorToForm(doctor)\r\n  { formik.values.id = doctor.id;\r\n    formik.values.username = doctor.username;\r\n    formik.values.password = doctor.password;\r\n    formik.values.name = doctor.name;\r\n    formik.values.lastName = doctor.lastName;\r\n    formik.values.status = doctor.status;\r\n    formik.values.roles = doctor.roles;\r\n    formik.values.action = \"update\";\r\n    setEditar(true);\r\n  }\r\n\r\n  function cleanDataDoctorToForm()\r\n  { formik.values.id = null;\r\n    formik.values.username = '';\r\n    formik.values.password = '';\r\n    formik.values.name = '';\r\n    formik.values.lastName = '';\r\n    formik.values.status = true;\r\n    formik.values.roles = [];\r\n    formik.values.action = \"new\";\r\n    setEditar(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(false);    \r\n    listar();\r\n    getRoles().then(setRoles);\r\n    // console.log(roles);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Usuario</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>{ cleanDataDoctorToForm(); setVisibleNewForm(true)}}>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={loading}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Usuario\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawerNewForm}\r\n          visible={visibleNewForm}\r\n        >\r\n          <Form\r\n            title=\"Usuario\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{display:'none'}}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}                    \r\n                  />                  \r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre de Usuario:\" required>\r\n              <Input\r\n                name=\"username\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.username && formik.touched.username ? (\r\n                <div className=\"error-field\">{formik.errors.username}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Contraseña:\" required>\r\n              <Input.Password\r\n                name=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n              />\r\n              {formik.errors.password && formik.touched.password ? (\r\n                <div className=\"error-field\">{formik.errors.password}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombres:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Apellidos:\" required>\r\n              <Input\r\n                name=\"lastName\"\r\n                value={formik.values.lastName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.lastName && formik.touched.lastName ? (\r\n                <div className=\"error-field\">{formik.errors.lastName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Roles:\" required>\r\n              {/* checkhere */}\r\n              <Checkbox.Group options={roleOptions(roles)} defaultValue={[2]} onChange={onChangeRoles} />\r\n              {formik.errors.roles && formik.touched.roles ? (\r\n                <div className=\"error-field\">{formik.errors.roles}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n          </Form>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title=\"Actualizar Usuario\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawerUpdateForm}\r\n          visible={visibleUpdateForm}\r\n        >\r\n          <Form\r\n            title=\"Usuario\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{display:'none'}}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}                    \r\n                  />                  \r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"ID:\" required >\r\n                  <Input\r\n                    disabled\r\n                    name=\"id\"\r\n                    value={formik.values.id}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>              \r\n              <Col span={12}>\r\n                <Form.Item label=\"Nombre de Usuario:\" required>\r\n                  <Input\r\n                    name=\"username\"\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.username && formik.touched.username ? (\r\n                    <div className=\"error-field\">{formik.errors.username}</div>\r\n                  ) : null}\r\n              </Form.Item>\r\n              </Col>\r\n            </Row>            \r\n            <Form.Item label=\"Contraseña:\" required>\r\n              <Input.Password\r\n                  placeholder=\"Ingrese la nueva contraseña\"\r\n                  name=\"password\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}   \r\n                  iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                />\r\n                {formik.errors.password && formik.touched.password ? (\r\n                  <div className=\"error-field\">{formik.errors.password}</div>\r\n                ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombres:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Apellidos:\" required>\r\n              <Input\r\n                name=\"lastName\"\r\n                value={formik.values.lastName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.lastName && formik.touched.lastName ? (\r\n                <div className=\"error-field\">{formik.errors.lastName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Roles:\" required>\r\n              {/* checkhere */}\r\n              <Checkbox.Group options={roleOptions(roles)} defaultValue={roleOptionsChecked(formik.values.roles)} onChange={onChangeRoles} />\r\n              {formik.errors.roles && formik.touched.roles ? (\r\n                <div className=\"error-field\">{formik.errors.roles}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n              \r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Desarrollo\\React\\hospital-almenara-app\\src\\services\\RoleService.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":22},{"ruleId":"195","severity":1,"message":"199","line":60,"column":10,"nodeType":"197","messageId":"198","endLine":60,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":175,"column":22,"nodeType":"202","messageId":"203","endLine":175,"endColumn":24},{"ruleId":"200","severity":1,"message":"201","line":175,"column":40,"nodeType":"202","messageId":"203","endLine":175,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":189,"column":27,"nodeType":"202","messageId":"203","endLine":189,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":189,"column":48,"nodeType":"202","messageId":"203","endLine":189,"endColumn":50},{"ruleId":"195","severity":1,"message":"204","line":14,"column":36,"nodeType":"197","messageId":"198","endLine":14,"endColumn":52},{"ruleId":"195","severity":1,"message":"205","line":10,"column":10,"nodeType":"197","messageId":"198","endLine":10,"endColumn":17},{"ruleId":"195","severity":1,"message":"206","line":10,"column":19,"nodeType":"197","messageId":"198","endLine":10,"endColumn":29},{"ruleId":"195","severity":1,"message":"207","line":17,"column":10,"nodeType":"197","messageId":"198","endLine":17,"endColumn":21},{"ruleId":"195","severity":1,"message":"208","line":18,"column":33,"nodeType":"197","messageId":"198","endLine":18,"endColumn":41},{"ruleId":"195","severity":1,"message":"209","line":23,"column":10,"nodeType":"197","messageId":"198","endLine":23,"endColumn":16},{"ruleId":"200","severity":1,"message":"201","line":130,"column":23,"nodeType":"202","messageId":"203","endLine":130,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":130,"column":42,"nodeType":"202","messageId":"203","endLine":130,"endColumn":44},{"ruleId":"200","severity":1,"message":"201","line":145,"column":28,"nodeType":"202","messageId":"203","endLine":145,"endColumn":30},{"ruleId":"200","severity":1,"message":"201","line":145,"column":50,"nodeType":"202","messageId":"203","endLine":145,"endColumn":52},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'EditOutlined' is defined but never used.","Identifier","unusedVar","'teams' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'actualizarSchool' is defined but never used.","'isAdmin' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'getRoleById' is defined but never used.","'findById' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\index.js":"1","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\App.js":"2","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\auth\\AuthContext.js":"3","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\auth\\authReducer.js":"4","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\routers\\AppRouter.js":"5","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\config\\token.js":"6","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\routers\\PrivateRoute.js":"7","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\routers\\DashboardRoutes.js":"8","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\routers\\PublicRoute.js":"9","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\config\\clienteAxios.js":"10","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\types\\types.js":"11","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Login\\index.js":"12","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Inicio\\index.js":"13","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Layout\\index.js":"14","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Universidad\\index.js":"15","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Servicio\\index.js":"16","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Especialidad\\index.js":"17","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio\\index.js":"18","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Proceso\\AsignarConvenio\\index.js":"19","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Reporte\\Servicio\\index.js":"20","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Proceso\\AsignarGrupo\\index.js":"21","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Reporte\\Medico\\index.js":"22","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Reporte\\Especialidad\\index.js":"23","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Grupo\\index.js":"24","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico\\index.js":"25","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\UserService.js":"26","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\SchoolService.js":"27","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\SpecialtyService.js":"28","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\DoctorService.js":"29","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\ServicioDoctorService.js":"30","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\PlazaService.js":"31","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\NivelService.js":"32","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\CampusService.js":"33","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\TeamService.js":"34","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\SchoolAgreementService.js":"35","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Grupos\\TableMesList.js":"36","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Header\\index.js":"37","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Sidebar\\index.js":"38","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Grupos\\TableMes.js":"39","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Grupos\\SelectTd.js":"40"},{"size":234,"mtime":1608264564616,"results":"41","hashOfConfig":"42"},{"size":752,"mtime":1608264564581,"results":"43","hashOfConfig":"42"},{"size":90,"mtime":1608264564581,"results":"44","hashOfConfig":"42"},{"size":442,"mtime":1608264564582,"results":"45","hashOfConfig":"42"},{"size":804,"mtime":1608264564645,"results":"46","hashOfConfig":"42"},{"size":334,"mtime":1608264564588,"results":"47","hashOfConfig":"42"},{"size":585,"mtime":1608264564646,"results":"48","hashOfConfig":"42"},{"size":2032,"mtime":1608264564646,"results":"49","hashOfConfig":"42"},{"size":516,"mtime":1608264564646,"results":"50","hashOfConfig":"42"},{"size":234,"mtime":1608534440838,"results":"51","hashOfConfig":"42"},{"size":82,"mtime":1608264564652,"results":"52","hashOfConfig":"42"},{"size":3866,"mtime":1608264564618,"results":"53","hashOfConfig":"42"},{"size":135,"mtime":1608264564617,"results":"54","hashOfConfig":"42"},{"size":433,"mtime":1608264564587,"results":"55","hashOfConfig":"42"},{"size":7387,"mtime":1608487542694,"results":"56","hashOfConfig":"42"},{"size":139,"mtime":1608264564621,"results":"57","hashOfConfig":"42"},{"size":147,"mtime":1608264564619,"results":"58","hashOfConfig":"42"},{"size":153,"mtime":1608264564642,"results":"59","hashOfConfig":"42"},{"size":3842,"mtime":1608264564640,"results":"60","hashOfConfig":"42"},{"size":5706,"mtime":1608264564644,"results":"61","hashOfConfig":"42"},{"size":649,"mtime":1608264564641,"results":"62","hashOfConfig":"42"},{"size":4505,"mtime":1608264564643,"results":"63","hashOfConfig":"42"},{"size":161,"mtime":1608264564643,"results":"64","hashOfConfig":"42"},{"size":16177,"mtime":1608533851508,"results":"65","hashOfConfig":"42"},{"size":39044,"mtime":1608533987425,"results":"66","hashOfConfig":"42"},{"size":194,"mtime":1608264564651,"results":"67","hashOfConfig":"42"},{"size":495,"mtime":1608487388657,"results":"68","hashOfConfig":"42"},{"size":203,"mtime":1608264564651,"results":"69","hashOfConfig":"42"},{"size":2063,"mtime":1608534424845,"results":"70","hashOfConfig":"42"},{"size":1132,"mtime":1608264564650,"results":"71","hashOfConfig":"42"},{"size":190,"mtime":1608264564649,"results":"72","hashOfConfig":"42"},{"size":193,"mtime":1608264564648,"results":"73","hashOfConfig":"42"},{"size":188,"mtime":1608264564647,"results":"74","hashOfConfig":"42"},{"size":185,"mtime":1608264564651,"results":"75","hashOfConfig":"42"},{"size":222,"mtime":1608264564649,"results":"76","hashOfConfig":"42"},{"size":3251,"mtime":1608264564584,"results":"77","hashOfConfig":"42"},{"size":1010,"mtime":1608264564585,"results":"78","hashOfConfig":"42"},{"size":2818,"mtime":1608533987425,"results":"79","hashOfConfig":"42"},{"size":2105,"mtime":1608264564584,"results":"80","hashOfConfig":"42"},{"size":955,"mtime":1608264564584,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"hx0k46",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\index.js",[],["168","169"],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\App.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\auth\\AuthContext.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\auth\\authReducer.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\routers\\AppRouter.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\config\\token.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\routers\\PrivateRoute.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\routers\\DashboardRoutes.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\routers\\PublicRoute.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\config\\clienteAxios.js",["170"],"import Axios from \"axios\";\r\n\r\n const LOCAL = \"http://localhost:8080/\";\r\n  const URL_NUBE = \"https://hospital-almenara-api.herokuapp.com/\"\r\n\r\nconst clienteAxios = Axios.create({\r\n  baseURL: LOCAL,\r\n});\r\n\r\nexport default clienteAxios;\r\n","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\types\\types.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Login\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Inicio\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Layout\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Universidad\\index.js",["171"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { createSchool, getSchools, actualizarSchool } from \"../../../services/SchoolService\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Universidad = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [editar, setEditar] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);  \r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const listar = () => {\r\n    getSchools().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n      });\r\n      setDataSource(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    shortName: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre Abreviado requerido.\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      shortName: \"\",\r\n      status: true,\r\n    },\r\n    validationSchema,\r\n    onSubmit: (value) => {\r\n      console.log(value);\r\n      if(editar){\r\n        createSchool(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }else{\r\n        createSchool(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisible(false);\r\n          openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n        });\r\n      }\r\n\r\n     \r\n      \r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombre Abreviado\",\r\n      dataIndex: \"shortName\",\r\n      key: \"shortName\",\r\n      width: 170,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 120,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        // <Button type=\"link\" size=\"small\">\r\n        //   <EditOutlined />\r\n        // </Button>\r\n         <Button type=\"primary\" size=\"large\" onClick={() => \r\n          {             \r\n            formik.values.name = record.name;\r\n            formik.values.shortName = record.shortName;\r\n            formik.values.status = record.status;\r\n            formik.values.id = record.id;\r\n            setEditar(true);\r\n            setVisible(true);          \r\n          }\r\n         \r\n         }>\r\n        <EditOutlined />\r\n       </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Universidad</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>           \r\n          {\r\n            formik.values.name = null;\r\n            formik.values.shortName = null;\r\n            formik.values.true = null;\r\n            formik.values.id = null;\r\n            setEditar(false);\r\n            setVisible(true)\r\n          }\r\n          }>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por ...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={loading}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 800 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Universidad\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Universidad\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Nombre Abreviado:\" required>\r\n              <Input\r\n                name=\"shortName\"\r\n                value={formik.values.shortName}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.shortName && formik.touched.shortName ? (\r\n                <div className=\"error-field\">{formik.errors.shortName}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n              {\r\n                editar? (\r\n                <Button type=\"primary\" htmlType=\"submit\" block> Actualizar</Button>\r\n                ) : <Button type=\"primary\" htmlType=\"submit\" block> Registrar</Button>\r\n              }\r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Servicio\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Especialidad\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Proceso\\AsignarServicio\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Proceso\\AsignarConvenio\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Reporte\\Servicio\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Proceso\\AsignarGrupo\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Reporte\\Medico\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Reporte\\Especialidad\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Grupo\\index.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React, { useEffect, useState } from \"react\";\r\nimport { } from \"antd\";\r\nimport {\r\n  Breadcrumb, Modal, Select ,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  notification,\r\n  AutoComplete,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { getDoctors, getDoctorsByTeam, getDoctorsByTeamTipo, getTeamIdCategoriaTodos, getFindAllByTeamIdGrupo, findAllTipos, \r\n  createDoctor, createDoctorGrupo, borrarDoctorGrupo } from \"../../../services/DoctorService\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./Grupo.css\";\r\n\r\nexport const Grupo = () => {\r\n  const [team1, setTeam1] = useState([]);\r\n  const [categoriaslst, setCategoriaslst] = useState([]);\r\n  const [doctoreslst, setDoctoreslst] = useState([]);  \r\n  const [editar, setEditar] = useState(false);  \r\n  const [visible, setVisible] = useState(false);\r\n  const [categoriaId, setCategoria] = useState(null);  \r\n  const [placeCategoria, setPlaceCategoria] = useState('Seleccione una Categoría');\r\n  const [placeNombre, setPlaceNombre] = useState('Seleccione un Médico');\r\n  const [placeGrupo, setPlaceGrupo] = useState('Seleccione un Grupo');\r\n  const [idTeam, setIdTeam] = useState(null);\r\n  var grupoDoctores = [];\r\n\r\n \r\n  const hanldeSelectTeam = (e) => {\r\n    // setGrupoDoctores([]);\r\n    getFindAllByTeamIdGrupo(e, categoriaId).then( x =>\r\n      {\r\n        console.log(x);        \r\n        grupoDoctores = x;\r\n\r\n        Modal.info({\r\n          title: \"Grupo\",\r\n          content: (\r\n            <div>\r\n            {grupoDoctores.map((data) => (              \r\n            <table className=\"table table-striped table-hover\">\r\n              <thead>\r\n                <tr>               \r\n                  <th>Doctor</th>\r\n                  <th>Especialidad</th>\r\n                  <th>Acciones</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                      {data.doctores.map((data2) => (\r\n                        <tr>\r\n\r\n                        {\r\n                          data2.nivel.id == 1? (\r\n                            <td style={{textAlign: 'left', backgroundColor:'#CAFFB3'}}>- {data2.paternalSurname} {data2.maternalSurname}, {data2.name}</td>\r\n                          ): data2.nivel.id == 2? (\r\n                            <td style={{textAlign: 'left', backgroundColor:'#FFFFB3'}}>- {data2.paternalSurname} {data2.maternalSurname}, {data2.name}</td>\r\n                          ):(\r\n                            <td style={{textAlign: 'left', backgroundColor:'#FFBBB3'}}>- {data2.paternalSurname} {data2.maternalSurname}, {data2.name}</td>\r\n                          )\r\n                        }\r\n\r\n                        {\r\n                          data2.nivel.id == 1? (                            \r\n                            <td style={{textAlign: 'left', backgroundColor:'#CAFFB3'}}>{data2.specialty.name}</td>\r\n                          ): data2.nivel.id == 2? (                            \r\n                            <td style={{textAlign: 'left', backgroundColor:'#FFFFB3'}}>{data2.specialty.name}</td>\r\n                          ):(                            \r\n                            <td style={{textAlign: 'left', backgroundColor:'#FFBBB3'}}>{data2.specialty.name}</td>\r\n                          )\r\n                        }\r\n                          \r\n                          <td key=\"edit\">\r\n                            <Button type=\"primary\" size=\"large\" onClick={() => \r\n                                {             \r\n                                  formik.values.name = data2.name;             \r\n                                  formik.values.team = data2.team.id;\r\n                                  formik.values.id = data2.id;  \r\n                                  console.log(data2); \r\n                                  setEditar(true);                               \r\n                                  setVisible(true);\r\n                                }\r\n                              }>\r\n                              <EditOutlined />\r\n                            </Button>        \r\n                            </td>\r\n                        </tr>\r\n                      ))}\r\n              </tbody>\r\n            </table>            \r\n            ))}\r\n          </div>\r\n          ),\r\n          onOk() {},\r\n        });\r\n  \r\n      }\r\n      );  \r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setVisible(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const editarMedico = (e) => {\r\n    console.log(e);\r\n  }\r\n\r\n  \r\n  const hanldeSelectNombre = (e) => {\r\n    console.log(e);\r\n    console.log(e.nativeEvent);    \r\n    console.log(e.nativeEvent.data);\r\n    \r\n    formik.values.name = e.nativeEvent.data;\r\n\r\n};\r\n\r\n  const hanldeSelectCategoria = (e) => {\r\n      console.log(e);\r\n      if(e == 1){\r\n        setPlaceCategoria('Medicina');\r\n        setCategoria(e);\r\n        cargarListado(e);        \r\n      }\r\n      if(e == 2){\r\n        setPlaceCategoria('Cirugía');\r\n        setCategoria(e);\r\n        cargarListado(e); \r\n      }\r\n  };\r\n\r\n  \r\n  \r\n  const hanldeSelectNombreMedico = (e) => {\r\n    console.log(e);\r\n        \r\n    doctoreslst.find(x => {\r\n      if(x.id == e){        \r\n        formik.values.name = x.name;\r\n        formik.values.id = e;\r\n        setPlaceNombre(formik.values.name);\r\n      }\r\n    });\r\n\r\n};\r\n\r\n\r\n  const hanldeSelectTeama = (e) => {\r\n    console.log(e);\r\n    console.log(formik.values.team);\r\n\r\n    team1.find(x => {\r\n\r\n      if(x.idGrupo == e){\r\n        setPlaceGrupo(x.nombreGrupo);\r\n      }\r\n\r\n    });\r\n\r\n    \r\n    formik.values.team  = e;\r\n    \r\n};\r\n\r\n  useEffect(() => {\r\n    setIdTeam(null);\r\n    cargarDoctores();\r\n\r\n    findAllTipos().then( x =>\r\n      {  \r\n        setCategoriaslst(x);\r\n      }\r\n      );\r\n\r\n      getTeamIdCategoriaTodos().then( x => {\r\n        setTeam1(x);\r\n      });\r\n\r\n\r\n  }, []);\r\n\r\n  \r\nconst cargarListado = (cate) => {\r\n    getDoctorsByTeamTipo(1, cate).then( x => {\r\n      console.log(x);\r\n      setTeam1(x) ;\r\n    });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string()\r\n  //   .trim()\r\n  //   .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n  //   .required(\"Nombre requerido.\"),\r\n  // shortName: Yup.string()\r\n  //   .trim()\r\n  //   .matches(/^[ñÑa-zA-Z ]*$/, \"Solo se admiten letras.\")\r\n  //   .required(\"Nombre Abreviado requerido.\"),\r\n});\r\n\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\n\r\nconst formik = useFormik({\r\n  initialValues: {\r\n    name: \"\",\r\n    shortName: \"\",\r\n    status: true,\r\n  },\r\n  validationSchema,\r\n  onSubmit: (value) => {\r\n    console.log(value);\r\n  \r\n    createDoctorGrupo(value.id, value.name, value.team).then((resp) => {\r\n         console.log(resp);                \r\n         setVisible(false);\r\n         cargarListado(categoriaId);\r\n         openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n       });\r\n   \r\n   \r\n    \r\n    formik.resetForm();\r\n  },\r\n});\r\n\r\n\r\n\r\n  const borrarDoctor = (id) => {\r\n    borrarDoctorGrupo(id).then((resp) => {\r\n      console.log(resp);\r\n      setVisible(false);\r\n      cargarListado(categoriaId);\r\n      openNotification(\"Eliminado Correctamente\", \"\", \"topRight\");\r\n    });\r\n  }\r\n\r\n  const cargarDoctores = () => {\r\n    getDoctors().then((resp) => {    \r\n      var resp2 = [];\r\n      resp.forEach(element => {\r\n        if(element.status){\r\n          resp2.push(element);\r\n        }\r\n      });\r\n      \r\n      setDoctoreslst(resp2);\r\n    });\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Grupos</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() =>           \r\n          {\r\n            formik.values.name = null;\r\n            formik.values.shortName = null;\r\n            formik.values.true = null;\r\n            formik.values.id = null;\r\n            cargarDoctores();\r\n            setEditar(false);\r\n            setVisible(true);\r\n          }\r\n          }>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        {/* TIPOS */}\r\n        <Form layout=\"inline\" style={{ marginBottom: \"20px\" }}>\r\n          <Form.Item label=\"Categoría\">\r\n            <Select\r\n              showSearch\r\n              name=\"cateogria\"\r\n              placeholder= {placeCategoria}\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\", marginLeft: \"45px\" }}\r\n              value={idTeam}\r\n              onChange={hanldeSelectCategoria}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n                {categoriaslst.map((data) => (\r\n                <Select.Option key={data.name} value={data.id}>\r\n                {data.name}\r\n                </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n        \r\n        {/* //grupos */}\r\n        <Form layout=\"inline\" style={{ marginBottom: \"20px\" }}>\r\n          <Form.Item label=\"Filtrar por Grupo\">\r\n            <Select\r\n              showSearch\r\n              name=\"specialty\"\r\n              placeholder=\"Seleccione un Grupo\"\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\" }}\r\n              value={idTeam}\r\n              onChange={hanldeSelectTeam}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }>\r\n            {team1.map((data) => (\r\n              <Select.Option key={data.idGrupo} value={data.idGrupo}>\r\n             {data.nombreGrupo}\r\n              </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n          \r\n        <div\r\n          className=\"table-group table-responsive\"\r\n          style={{ textAlign: \"center\", display: \"flex\" }}>\r\n\r\n            {team1.map((data) => (\r\n                <table className=\"table table-striped table-hover\" border=\"1\" style={{width: \"340px\", marginRight: \"10px\"}}>\r\n                <thead>\r\n                  <tr >\r\n                    <th> {data.nombreGrupo}</th>\r\n                    <th> Acciones</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.doctores.map((data2) => (\r\n                    <tr >\r\n                       {\r\n                data2.nivel.id == 1? (\r\n                    <td key={data2.id} style={{textAlign: 'left', backgroundColor:'#CAFFB3'}}>\r\n                    {data2.name} {data2.paternalSurname}\r\n                    </td>\r\n                ): data2.nivel.id == 2? (\r\n                  <td key={data2.id} style={{textAlign: 'left', backgroundColor:'#FFFFB3'}}>\r\n                  {data2.name} {data2.paternalSurname}\r\n                  </td>\r\n                ):(\r\n                  <td key={data2.id} style={{textAlign: 'left', backgroundColor:'#FFBBB3'}}>\r\n                  {data2.name} {data2.paternalSurname}\r\n                  </td>\r\n                )\r\n              }\r\n                                                                  \r\n                      <td key=\"edit\">\r\n\r\n                      <Button type=\"primary\" size=\"large\" onClick={() => \r\n                          {                    \r\n                            formik.values.name = data2.name;             \r\n                            formik.values.team = data2.team.id;\r\n                            formik.values.id = data2.id;\r\n                            console.log(data2);\r\n                            setEditar(true);\r\n                            setVisible(true);          \r\n                          }\r\n                        \r\n                        }>\r\n                        <EditOutlined />\r\n                      </Button>        \r\n\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n              ))}\r\n      \r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Drawer\r\n          title=\"Médico\"\r\n          placement=\"right\"\r\n          closable={false}\r\n\r\n          width={400}\r\n          onClose={handleCloseDrawer}\r\n          visible={visible}\r\n        >\r\n          <Form\r\n            title=\"Medico\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Form.Item label=\"Nombre:\" required>\r\n\r\n            {\r\n                editar? (\r\n              \r\n                  <Input\r\n                  name=\"name\"\r\n                  disabled                 \r\n                  value={formik.values.name}\r\n                  onChange={formik.handleChange}\r\n                />\r\n                ) :    \r\n                <Select\r\n              showSearch\r\n              name=\"medico\"\r\n              placeholder= {placeNombre}\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\"}}\r\n              value={formik.values.name}\r\n              onChange={hanldeSelectNombreMedico}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n                {doctoreslst.map((data) => (\r\n                <Select.Option key={data.id} value={data.id}>\r\n                {data.name}\r\n                </Select.Option>\r\n                ))}\r\n            </Select>\r\n              } \r\n                {formik.errors.name && formik.touched.name ? (\r\n                  <div className=\"error-field\">{formik.errors.name}</div>\r\n                ) : null}\r\n            </Form.Item>\r\n           \r\n            <Form.Item label=\"Categoría\">\r\n            <Select\r\n              showSearch\r\n              name=\"cateogria\"\r\n              placeholder= {placeCategoria}\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\"}}\r\n              value={formik.values.categoria}\r\n              onChange={hanldeSelectCategoria}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n                {categoriaslst.map((data) => (\r\n                <Select.Option key={data.name} value={data.id}>\r\n                {data.name}\r\n                </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Grupo\">\r\n            <Select\r\n              showSearch\r\n              name=\"specialty2\"\r\n              placeholder=\"Seleccione un Grupo\"\r\n              optionFilterProp=\"children\"\r\n              style={{ width: \"300px\" }}\r\n              value={formik.values.team}\r\n              onChange={hanldeSelectTeama}  \r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }>\r\n            {team1.map((data) => (\r\n              <Select.Option key={data.nombreGrupo} value={data.idGrupo}>\r\n             {data.nombreGrupo}\r\n              </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n               {\r\n                editar? (\r\n                <Button type=\"primary\" htmlType=\"submit\"  block> Actualizar</Button>\r\n                ) : <Button type=\"primary\" htmlType=\"submit\"  block> Registrar</Button>\r\n              } \r\n              <Button type=\"danger\" \r\n              onClick={() => \r\n                {     console.log(formik.values.idta2); \r\n                  borrarDoctor(formik.values.id);           \r\n                \r\n                }\r\n              }\r\n              block> Eliminar</Button>\r\n\r\n            \r\n          </Form>\r\n        </Drawer>\r\n\r\n    </div>\r\n\r\n\r\n\r\n  );\r\n};\r\n","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\pages\\Mantenimiento\\Medico\\index.js",["193","194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Drawer,\r\n  Input,\r\n  Table,\r\n  Tag,\r\n  Form,\r\n  Radio,\r\n  Select,\r\n  DatePicker,\r\n  Row,\r\n  Col,\r\n  notification,\r\n} from \"antd\";\r\nimport { EditOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { useFormik } from \"formik\";\r\nimport { updateDoctor, createDoctor, getDoctors } from \"../../../services/DoctorService\";\r\nimport { getSchoolsAgreements } from \"../../../services/SchoolAgreementService\";\r\nimport { getSpecialties } from \"../../../services/SpecialtyService\";\r\nimport { getPlazas } from \"../../../services/PlazaService\";\r\nimport { getCampus } from \"../../../services/CampusService\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport moment from \"moment\";\r\n\r\nimport \"../Mantenimiento.css\";\r\nimport { getNiveles } from \"../../../services/NivelService\";\r\nimport { getTeams } from \"../../../services/TeamService\";\r\n\r\nconst openNotification = (msg, description, placement) => {\r\n  notification.success({\r\n    message: msg,\r\n    description: description,\r\n    placement,\r\n  });\r\n};\r\n\r\nexport const Medico = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [visibleNewForm, setVisibleNewForm] = useState(false);\r\n  const [visibleUpdateForm, setVisibleUpdateForm] = useState(false);\r\n  const [filterTable, setFilterTable] = useState(null);\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const [schoolsAgreements, setSchoolsAgreements] = useState([]);\r\n  const [specialties, setSpecialties] = useState([]);\r\n  const [plazas, setPlazas] = useState([]);\r\n  const [campus, setCampus] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [niveles, setNiveles] = useState([]);\r\n\r\n  const listar = () => {\r\n    getDoctors().then((resp) => {\r\n      resp.forEach((data) => {\r\n        data.key = data.id;\r\n        data.schoolName = data.schoolAgreement.school.shortName;\r\n        data.specialtyName = data.specialty.name;\r\n        data.plazaName = data.plaza.name;\r\n        data.campusName = data.campus.name;\r\n        data.lastName = data.paternalSurname + \" \" + data.maternalSurname;\r\n        // data.teamName = \"Grupo \" + data.team.name;\r\n        data.nivelName = data.nivel.name;\r\n      });\r\n      setDataSource(resp);\r\n      console.log(resp);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    document: Yup.string()\r\n      .trim()\r\n      .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n      .length(8, \"Se requiere 8 dígitos.\")\r\n      .required(\"DNI requerido.\"),\r\n    paternalSurname: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido Paterno requerido.\"),\r\n    maternalSurname: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Apellido Materno requerido.\"),\r\n    name: Yup.string()\r\n      .trim()\r\n      .matches(/^[ñÑa-zA-ZáéíóúÁÉÍÓÚ ]*$/, \"Solo se admiten letras.\")\r\n      .required(\"Nombre requerido.\"),\r\n    schoolAgreement: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Universidad requerida\"),\r\n    }),\r\n    specialty: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Especialidad requerida\"),\r\n    }),\r\n    plaza: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Plaza requerida.\"),\r\n    }),\r\n    campus: Yup.object().shape({\r\n      id: Yup.number().nullable().required(\"Sede requerida.\"),\r\n    }),\r\n    // team: Yup.object().shape({\r\n    //   id: Yup.number().nullable().required(\"Grupo requerido.\"),\r\n    // }),\r\n    address: Yup.string()\r\n      .trim()\r\n      // .matches(\r\n      //   /^[a-zA-Z\\s](\\d)?$/,\r\n      //   \"No se admiten caracteres especiales.\"\r\n      // ),\r\n      .min(5, \"El campo debe tener al menos 5 caracteres.\")\r\n      .required(\"Dirección es un campo requerido\"),\r\n    cmp: Yup.string()\r\n      .trim()\r\n      .matches(/^[0-9]*$/, \"Solo se admiten números.\")\r\n      .min(5, \"Solo se admite min. 5 dígitos.\")\r\n      .max(6, \"Solo se admite máx. 6 dígitos.\")\r\n      .required(\"CMP requerido\"),\r\n    email: Yup.string()\r\n      .trim()\r\n      .email(\"Formato no válido. (ej. correo@example.com)\")\r\n      .required(\"Correo requerido.\"),\r\n    phone: Yup.string()\r\n      .length(9, \"Se requiere 9 dígitos.\")\r\n      .required(\"N° Celular requerido.\"),\r\n  });\r\n  \r\n  const formik = useFormik({\r\n    initialValues: {\r\n      action : \"new\",\r\n      document: \"\",\r\n      paternalSurname: \"\",\r\n      maternalSurname: \"\",\r\n      name: \"\",\r\n      schoolAgreement: {\r\n        id: null,\r\n      },\r\n      specialty: {\r\n        id: null,\r\n      },\r\n      plaza: {\r\n        id: null,\r\n      },\r\n      campus: {\r\n        id: null,\r\n      },\r\n      team: {\r\n        id: null,\r\n      },\r\n      nivel: {\r\n        id: 1,\r\n      },\r\n      birthDate: null,\r\n      address: \"\",\r\n      cmp: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      status: true,\r\n    },\r\n    validationSchema,\r\n    // onOpen :() => {\r\n    //   console.log(\"Opening...\")\r\n    // },\r\n    onSubmit: (value) => {      \r\n      console.log(value);\r\n      \r\n      if(value.action==\"new\")\r\n      { createDoctor(value).then((resp) => {\r\n          // console.log(resp);\r\n          listar();\r\n          setVisibleNewForm(false);\r\n          openNotification(\"Guardado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        });      \r\n      } else if(value.action==\"update\")\r\n      { delete value.action;\r\n        // console.log(value);\r\n        updateDoctor(value).then((resp) => {\r\n          console.log(resp);\r\n          listar();\r\n          setVisibleUpdateForm(false);\r\n          openNotification(\"Actualizado Correctamente\", \"\", \"topRight\");\r\n          formik.resetForm();\r\n        });   \r\n      }      \r\n    },\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: 50,\r\n      fixed: \"left\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"N° Documento\",\r\n      dataIndex: \"document\",\r\n      key: \"document\",\r\n      width: 110,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Universidad\",\r\n      dataIndex: \"schoolName\",\r\n      key: \"schoolName\",\r\n      width: 108,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Especialidad\",\r\n      dataIndex: \"specialtyName\",\r\n      key: \"specialtyName\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Plaza\",\r\n      dataIndex: \"plazaName\",\r\n      key: \"plazaName\",\r\n      width: 80,\r\n      align: \"center\",\r\n    },\r\n    // {\r\n    //   title: \"Grupo\",\r\n    //   dataIndex: \"teamName\",\r\n    //   key: \"teamName\",\r\n    //   width: 80,\r\n    //   align: \"center\",\r\n    // },\r\n    {\r\n      title: \"Nivel\",\r\n      dataIndex: \"nivelName\",\r\n      key: \"nivelName\",\r\n      width: 70,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Sede\",\r\n      dataIndex: \"campusName\",\r\n      key: \"campusName\",\r\n      width: 78,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Fecha de Nacimiento\",\r\n      dataIndex: \"birthDate\",\r\n      key: \"birthDate\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Domicilio\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"CMP\",\r\n      dataIndex: \"cmp\",\r\n      key: \"cmp\",\r\n      width: 70,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Correo\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"N° Celular\",\r\n      dataIndex: \"phone\",\r\n      key: \"phone\",\r\n      width: 100,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Estado\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      width: 90,\r\n      align: \"center\",\r\n      render: (val, record) =>\r\n        record.status ? (\r\n          <Tag color=\"green\">ACTIVO</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">INACTIVO</Tag>\r\n        ),\r\n      filters: [\r\n        {\r\n          text: \"ACTIVO\",\r\n          value: true,\r\n        },\r\n        {\r\n          text: \"INACTIVO\",\r\n          value: false,\r\n        },\r\n      ],\r\n      filterMultiple: false,\r\n      onFilter: (value, record) => {\r\n        let status = String(record.status);\r\n        return status.indexOf(value) === 0;\r\n      },\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      fixed: \"right\",\r\n      width: 100,\r\n      align: \"center\",\r\n      render: (record) => (\r\n        //checkhere\r\n        <Button type=\"link\" size=\"small\" onClick={() => {showUpdateForm(record);}}>\r\n          <EditOutlined />\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const keyUpTable = (value) => {\r\n    setFilterTable(\r\n      dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCloseDrawerNewForm = (e) => {    \r\n    setVisibleNewForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const handleCloseDrawerUpdateForm = (e) => {    \r\n    setVisibleUpdateForm(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const showUpdateForm = (doctor) => {\r\n    setDataDoctorToForm(doctor);\r\n    setVisibleUpdateForm(true);\r\n  };\r\n\r\n  const dateFormatList = [\"DD/MM/YYYY\", \"YYYY/MM/DD\"];\r\n\r\n  function setDataDoctorToForm(doctor)\r\n  { formik.initialValues.action = \"update\";\r\n    formik.initialValues.id = doctor.id;\r\n    formik.initialValues.document = doctor.document;\r\n    formik.initialValues.paternalSurname = doctor.paternalSurname;\r\n    formik.initialValues.maternalSurname = doctor.maternalSurname;\r\n    formik.initialValues.name = doctor.name;\r\n    formik.initialValues.schoolAgreement.id = doctor.schoolAgreement.id;\r\n    formik.initialValues.specialty.id = doctor.specialty.id;\r\n    formik.initialValues.plaza.id = doctor.plaza.id;\r\n    formik.initialValues.campus.id = doctor.campus.id;\r\n    formik.initialValues.plazaName = doctor.campus.plazaName;\r\n    \r\n    formik.initialValues.nivel.id = doctor.nivel.id;\r\n    formik.initialValues.birthDate = moment(doctor.birthDate, dateFormatList);\r\n    formik.initialValues.address = doctor.address;\r\n    formik.initialValues.cmp = doctor.cmp;\r\n    formik.initialValues.email = doctor.email;\r\n    formik.initialValues.phone = doctor.phone;\r\n    formik.initialValues.status = doctor.status;\r\n\r\n    console.log(moment(doctor.birthDate).format(\"DD/MM/YYYY\"));\r\n  }\r\n\r\n  function disabledDate(current) {\r\n    return current && current > moment().startOf(\"day\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    listar();\r\n    getSchoolsAgreements().then(setSchoolsAgreements);\r\n    getSpecialties().then(setSpecialties);\r\n    getPlazas().then(setPlazas);\r\n    getCampus().then(setCampus);\r\n    getNiveles().then(setNiveles);\r\n    getTeams().then(setTeams);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mantenimiento\">\r\n      <header>\r\n        <h2 className=\"title\">\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item>Mantenimiento</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Médico</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </h2>\r\n        <Button type=\"primary\" size=\"large\" onClick={() => {setVisibleNewForm(true);}}>\r\n          <PlusOutlined /> Agregar\r\n        </Button>\r\n      </header>\r\n      <div className=\"content\">\r\n        <Input.Search\r\n          className=\"searchInput\"\r\n          placeholder=\"Buscar por nombre...\"\r\n          onKeyUpCapture={(e) => keyUpTable(e.target.value)}\r\n        />\r\n        <Table\r\n          loading={loading}\r\n          dataSource={filterTable === null ? dataSource : filterTable}\r\n          columns={columns}\r\n          pagination={{ pageSize: 5 }}\r\n          scroll={{ x: 2000 }}\r\n        />\r\n        <Drawer\r\n          title=\"Agregar Médico\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={500}\r\n          onClose={handleCloseDrawerNewForm}\r\n          visible={visibleNewForm}\r\n          id=\"newForm\"\r\n        >\r\n          <Form\r\n            title=\"Universidad\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >\r\n            <Row gutter={12} style={{display:'none'}}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}                    \r\n                  />                  \r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"DNI:\" required>\r\n                  <Input\r\n                    name=\"document\"\r\n                    value={formik.values.document}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Paterno:\" required>\r\n                  <Input\r\n                    name=\"paternalSurname\"\r\n                    value={formik.values.paternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.paternalSurname &&\r\n                  formik.touched.paternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.paternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Materno:\" required>\r\n                  <Input\r\n                    name=\"maternalSurname\"\r\n                    value={formik.values.maternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.maternalSurname &&\r\n                  formik.touched.maternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.maternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre Completo:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Universidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"schoolAgreement.id\"\r\n                placeholder=\"Seleccione una universidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.schoolAgreement.id}\r\n                onChange={(text) =>\r\n                  formik.setFieldValue(\"schoolAgreement.id\", text)\r\n                }\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {schoolsAgreements.map(({ id, school }) => (\r\n                  <Select.Option key={id} value={id}>\r\n                    {school.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.schoolAgreement &&\r\n              formik.touched.schoolAgreement ? (\r\n                <div className=\"error-field\">\r\n                  {formik.errors.schoolAgreement.id}\r\n                </div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Especialidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"specialty.id\"\r\n                placeholder=\"Seleccione una especialidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.specialty.id}\r\n                onChange={(text) => formik.setFieldValue(\"specialty.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {specialties.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.specialty && formik.touched.specialty ? (\r\n                <div className=\"error-field\">{formik.errors.specialty.id}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Plaza:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"plaza.id\"\r\n                    placeholder=\"Seleccione una plaza\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.plaza.id}\r\n                    onChange={(text) => formik.setFieldValue(\"plaza.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {plazas.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.plaza && formik.touched.plaza ? (\r\n                    <div className=\"error-field\">{formik.errors.plaza.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sede:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"campus.id\"\r\n                    placeholder=\"Seleccione una sede\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.campus.id}\r\n                    onChange={(text) => formik.setFieldValue(\"campus.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {campus.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.campus && formik.touched.campus ? (\r\n                    <div className=\"error-field\">{formik.errors.campus.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Grupo:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"grupo.id\"\r\n                    placeholder=\"Seleccione un grupo\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.team.id}\r\n                    onChange={(text) => formik.setFieldValue(\"team.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {teams.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.team && formik.touched.team ? (\r\n                    <div className=\"error-field\">{formik.errors.team.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}> */}\r\n                <Form.Item label=\"Nivel:\">\r\n                  <Select\r\n                    disabled\r\n                    showSearch\r\n                    name=\"campus.id\"\r\n                    placeholder=\"Seleccione un nivel\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.nivel.id}\r\n                    onChange={(text) => formik.setFieldValue(\"nivel.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {niveles.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n              {/* </Col>\r\n            </Row> */}\r\n\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Fecha de Nacimiento:\">\r\n                  <DatePicker\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"birthDate\"\r\n                    value={formik.values.birthDate}\r\n                    onChange={(value) =>\r\n                      formik.setFieldValue(\"birthDate\", value)\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    format={dateFormatList}\r\n                  />\r\n                  {formik.errors.birthDate && formik.touched.birthDate ? (\r\n                    <div className=\"error-field\">{formik.errors.birthDate}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"CMP:\" required>\r\n                  <Input\r\n                    name=\"cmp\"\r\n                    value={formik.values.cmp}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.cmp && formik.touched.cmp ? (\r\n                    <div className=\"error-field\">{formik.errors.cmp}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Domicilio:\">\r\n              <Input\r\n                name=\"address\"\r\n                value={formik.values.address}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.address && formik.touched.address ? (\r\n                <div className=\"error-field\">{formik.errors.address}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Correo:\" required>\r\n                  <Input\r\n                    name=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.email && formik.touched.email ? (\r\n                    <div className=\"error-field\">{formik.errors.email}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°Celular:\" required>\r\n                  <Input\r\n                    name=\"phone\"\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.phone && formik.touched.phone ? (\r\n                    <div className=\"error-field\">{formik.errors.phone}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block>\r\n              Registrar\r\n            </Button>\r\n          </Form>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          title=\"Actualizar Médico\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          width={500}\r\n          onClose={handleCloseDrawerUpdateForm}\r\n          visible={visibleUpdateForm}\r\n          id=\"updateForm\"\r\n        >\r\n          <Form\r\n            title=\"Medico\"\r\n            layout=\"vertical\"\r\n            onSubmitCapture={formik.handleSubmit}\r\n          >            \r\n            <Row gutter={12} style={{display:'none'}}>\r\n              <Col span={12}>\r\n                <Form.Item required>\r\n                  <Input\r\n                    name=\"action\"\r\n                    value={formik.values.action}\r\n                    onChange={formik.handleChange}                    \r\n                  />                  \r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"ID:\" required >\r\n                  <Input\r\n                    disabled\r\n                    name=\"id\"\r\n                    value={formik.values.id}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"DNI:\" required>\r\n                  <Input\r\n                    name=\"document\"\r\n                    value={formik.values.document}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.document && formik.touched.document ? (\r\n                    <div className=\"error-field\">{formik.errors.document}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Paterno:\" required>\r\n                  <Input\r\n                    name=\"paternalSurname\"\r\n                    value={formik.values.paternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.paternalSurname &&\r\n                  formik.touched.paternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.paternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Apellido Materno:\" required>\r\n                  <Input\r\n                    name=\"maternalSurname\"\r\n                    value={formik.values.maternalSurname}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.maternalSurname &&\r\n                  formik.touched.maternalSurname ? (\r\n                    <div className=\"error-field\">\r\n                      {formik.errors.maternalSurname}\r\n                    </div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Nombre Completo:\" required>\r\n              <Input\r\n                name=\"name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className=\"error-field\">{formik.errors.name}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Universidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"schoolAgreement.id\"\r\n                placeholder=\"Seleccione una universidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.schoolAgreement.id}\r\n                onChange={(text) =>\r\n                  formik.setFieldValue(\"schoolAgreement.id\", text)\r\n                }\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {schoolsAgreements.map(({ id, school }) => (\r\n                  <Select.Option key={id} value={id}>\r\n                    {school.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.schoolAgreement &&\r\n              formik.touched.schoolAgreement ? (\r\n                <div className=\"error-field\">\r\n                  {formik.errors.schoolAgreement.id}\r\n                </div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Form.Item label=\"Especialidad:\" required>\r\n              <Select\r\n                showSearch\r\n                name=\"specialty.id\"\r\n                placeholder=\"Seleccione una especialidad\"\r\n                optionFilterProp=\"children\"\r\n                style={{ width: \"100%\" }}\r\n                value={formik.values.specialty.id}\r\n                onChange={(text) => formik.setFieldValue(\"specialty.id\", text)}\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {specialties.map((data) => (\r\n                  <Select.Option key={data.id} value={data.id}>\r\n                    {data.name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n              {formik.errors.specialty && formik.touched.specialty ? (\r\n                <div className=\"error-field\">{formik.errors.specialty.id}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Plaza:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"plaza.id\"\r\n                    placeholder=\"Seleccione una plaza\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.plaza.id}\r\n                    onChange={(text) => formik.setFieldValue(\"plaza.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {plazas.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.plaza && formik.touched.plaza ? (\r\n                    <div className=\"error-field\">{formik.errors.plaza.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sede:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"campus.id\"\r\n                    placeholder=\"Seleccione una sede\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.campus.id}\r\n                    onChange={(text) => formik.setFieldValue(\"campus.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {campus.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.campus && formik.touched.campus ? (\r\n                    <div className=\"error-field\">{formik.errors.campus.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Grupo:\" required>\r\n                  <Select\r\n                    showSearch\r\n                    name=\"grupo.id\"\r\n                    placeholder=\"Seleccione un grupo\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.team.id}\r\n                    onChange={(text) => formik.setFieldValue(\"team.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {teams.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                  {formik.errors.team && formik.touched.team ? (\r\n                    <div className=\"error-field\">{formik.errors.team.id}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}> */}\r\n                <Form.Item label=\"Nivel:\">\r\n                  <Select\r\n                    disabled\r\n                    showSearch\r\n                    name=\"campus.id\"\r\n                    placeholder=\"Seleccione un nivel\"\r\n                    optionFilterProp=\"children\"\r\n                    style={{ width: \"100%\" }}\r\n                    value={formik.values.nivel.id}\r\n                    onChange={(text) => formik.setFieldValue(\"nivel.id\", text)}\r\n                    filterOption={(input, option) =>\r\n                      option.props.children\r\n                        .toLowerCase()\r\n                        .indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                  >\r\n                    {niveles.map((data) => (\r\n                      <Select.Option key={data.id} value={data.id}>\r\n                        {data.name}\r\n                      </Select.Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n              {/* </Col>\r\n            </Row> */}\r\n\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Fecha de Nacimiento:\">\r\n                  <DatePicker\r\n                    style={{ width: \"100%\" }}\r\n                    name=\"birthDate\"\r\n                    value={formik.values.birthDate}\r\n                    onChange={(value) =>\r\n                      formik.setFieldValue(\"birthDate\", value)\r\n                    }\r\n                    disabledDate={disabledDate}\r\n                    format={dateFormatList}\r\n                  />\r\n                  {formik.errors.birthDate && formik.touched.birthDate ? (\r\n                    <div className=\"error-field\">{formik.errors.birthDate}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"CMP:\" required>\r\n                  <Input\r\n                    name=\"cmp\"\r\n                    value={formik.values.cmp}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.cmp && formik.touched.cmp ? (\r\n                    <div className=\"error-field\">{formik.errors.cmp}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Domicilio:\">\r\n              <Input\r\n                name=\"address\"\r\n                value={formik.values.address}\r\n                onChange={formik.handleChange}\r\n              />\r\n              {formik.errors.address && formik.touched.address ? (\r\n                <div className=\"error-field\">{formik.errors.address}</div>\r\n              ) : null}\r\n            </Form.Item>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Correo:\" required>\r\n                  <Input\r\n                    name=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.email && formik.touched.email ? (\r\n                    <div className=\"error-field\">{formik.errors.email}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°Celular:\" required>\r\n                  <Input\r\n                    name=\"phone\"\r\n                    value={formik.values.phone}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  {formik.errors.phone && formik.touched.phone ? (\r\n                    <div className=\"error-field\">{formik.errors.phone}</div>\r\n                  ) : null}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item label=\"Estado:\">\r\n              <Radio.Group\r\n                name=\"status\"\r\n                value={formik.values.status}\r\n                onChange={formik.handleChange}\r\n              >\r\n                <Radio.Button value={true}>ACTIVO</Radio.Button>\r\n                <Radio.Button value={false}>INACTIVO</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" block>\r\n              Actualizar\r\n            </Button>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\UserService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\SchoolService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\SpecialtyService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\DoctorService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\ServicioDoctorService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\PlazaService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\NivelService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\CampusService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\TeamService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\services\\SchoolAgreementService.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Grupos\\TableMesList.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Header\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Sidebar\\index.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Grupos\\TableMes.js",[],"F:\\CRISTOPHER\\WEByARTE\\Fabrica\\Hospital Almenara\\React\\almenara-reactapp\\src\\components\\Grupos\\SelectTd.js",[],["196","197"],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":4,"column":9,"nodeType":"204","messageId":"205","endLine":4,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":14,"column":36,"nodeType":"204","messageId":"205","endLine":14,"endColumn":52},{"ruleId":"202","severity":1,"message":"207","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":8},{"ruleId":"202","severity":1,"message":"208","line":9,"column":3,"nodeType":"204","messageId":"205","endLine":9,"endColumn":6},{"ruleId":"202","severity":1,"message":"209","line":11,"column":3,"nodeType":"204","messageId":"205","endLine":11,"endColumn":8},{"ruleId":"202","severity":1,"message":"210","line":13,"column":3,"nodeType":"204","messageId":"205","endLine":13,"endColumn":15},{"ruleId":"202","severity":1,"message":"211","line":16,"column":22,"nodeType":"204","messageId":"205","endLine":16,"endColumn":38},{"ruleId":"202","severity":1,"message":"212","line":17,"column":3,"nodeType":"204","messageId":"205","endLine":17,"endColumn":15},{"ruleId":"202","severity":1,"message":"213","line":31,"column":10,"nodeType":"204","messageId":"205","endLine":31,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":61,"column":42,"nodeType":"216","messageId":"217","endLine":61,"endColumn":44},{"ruleId":"214","severity":1,"message":"215","line":63,"column":45,"nodeType":"216","messageId":"217","endLine":63,"endColumn":47},{"ruleId":"214","severity":1,"message":"215","line":71,"column":42,"nodeType":"216","messageId":"217","endLine":71,"endColumn":44},{"ruleId":"214","severity":1,"message":"215","line":73,"column":45,"nodeType":"216","messageId":"217","endLine":73,"endColumn":47},{"ruleId":"202","severity":1,"message":"218","line":113,"column":9,"nodeType":"204","messageId":"205","endLine":113,"endColumn":21},{"ruleId":"202","severity":1,"message":"219","line":118,"column":9,"nodeType":"204","messageId":"205","endLine":118,"endColumn":27},{"ruleId":"214","severity":1,"message":"215","line":129,"column":12,"nodeType":"216","messageId":"217","endLine":129,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":134,"column":12,"nodeType":"216","messageId":"217","endLine":134,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":146,"column":24,"nodeType":"222","messageId":"223","endLine":146,"endColumn":26},{"ruleId":"214","severity":1,"message":"215","line":147,"column":15,"nodeType":"216","messageId":"217","endLine":147,"endColumn":17},{"ruleId":"220","severity":1,"message":"221","line":161,"column":18,"nodeType":"222","messageId":"223","endLine":161,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":163,"column":20,"nodeType":"216","messageId":"217","endLine":163,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":360,"column":32,"nodeType":"216","messageId":"217","endLine":360,"endColumn":34},{"ruleId":"214","severity":1,"message":"215","line":364,"column":35,"nodeType":"216","messageId":"217","endLine":364,"endColumn":37},{"ruleId":"202","severity":1,"message":"224","line":51,"column":10,"nodeType":"204","messageId":"205","endLine":51,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":166,"column":22,"nodeType":"216","messageId":"217","endLine":166,"endColumn":24},{"ruleId":"214","severity":1,"message":"215","line":174,"column":29,"nodeType":"216","messageId":"217","endLine":174,"endColumn":31},{"ruleId":"198","replacedBy":"225"},{"ruleId":"200","replacedBy":"226"},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'URL_NUBE' is assigned a value but never used.","Identifier","unusedVar","'actualizarSchool' is defined but never used.","'Table' is defined but never used.","'Tag' is defined but never used.","'Radio' is defined but never used.","'AutoComplete' is defined but never used.","'getDoctorsByTeam' is defined but never used.","'createDoctor' is defined but never used.","'placeGrupo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'editarMedico' is assigned a value but never used.","'hanldeSelectNombre' is assigned a value but never used.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'teams' is assigned a value but never used.",["227"],["228"],"no-global-assign","no-unsafe-negation"]
>>>>>>> 3d316966d182e16af893488ca9073c97f44e6ac0
